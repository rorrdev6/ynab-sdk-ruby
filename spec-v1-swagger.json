{
  "swagger": "2.0",
  "info": {
    "description":
      "Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com",
    "version": "1.0.0",
    "title": "YNAB API Endpoints"
  },
  "schemes": ["https"],
  "host": "api.youneedabudget.com",
  "basePath": "/papi/v1",
  "tags": [
    {
      "name": "Budgets"
    },
    {
      "name": "Accounts",
      "description": "Accounts for a budget"
    },
    {
      "name": "Categories",
      "description": "Categories for a budget"
    },
    {
      "name": "Payees",
      "description": "Payees for a budget"
    },
    {
      "name": "Payee Locations",
      "description":
        "  When you enter a transaction and specify a payee on the YNAB mobile apps, the GPS coordinates for that location are stored, with your permission, so that the next time you are in the same place (like the Grocery store) we can pre-populate nearby payees for you!  Itâ€™s handy and saves you time.  This resource makes these locations available.  Locations will not be available for all payees."
    },
    {
      "name": "Months",
      "description":
        "Each budget contains one or more months, which is where To be Budgeted, Age of Money and Category (budgeted / activity / balances) amounts are available."
    },
    {
      "name": "Transactions",
      "description": "Transactions for a budget"
    },
    {
      "name": "Scheduled Transactions",
      "description": "Scheduled transactions for a budget"
    }
  ],
  "security": [
    {
      "bearer": []
    }
  ],
  "paths": {
    "/budgets": {
      "get": {
        "tags": ["Budgets"],
        "summary": "List budgets",
        "description": "Returns budgets list with summary information",
        "operationId": "getBudgets",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Budgets",
            "schema": {
              "$ref": "#/definitions/BudgetSummaryResponse"
            }
          },
          "404": {
            "description": "No budgets found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}": {
      "get": {
        "tags": ["Budgets"],
        "summary": "Single budget",
        "description":
          "Returns a single budget with all related entities.  This resource is effectively a full budget export.",
        "operationId": "getBudgetById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "last_knowledge_of_server",
            "in": "query",
            "description":
              "Starting server knowledge.  If provided, only entities that have changed since last_knowledge_of_server will be included.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Budget",
            "schema": {
              "$ref": "#/definitions/BudgetDetailResponse"
            }
          },
          "404": {
            "description": "Budget not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Account list",
        "description": "Returns all accounts",
        "operationId": "getAccounts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts",
            "schema": {
              "$ref": "#/definitions/AccountsResponse"
            }
          },
          "404": {
            "description": "No accounts found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/accounts/{account_id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Single account",
        "description": "Returns a single account",
        "operationId": "getAccountById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "List categories",
        "description": "Returns all categories grouped by category group",
        "operationId": "getCategories",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories grouped by category group",
            "schema": {
              "$ref": "#/definitions/CategoriesResponse"
            }
          },
          "404": {
            "description": "No categories found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/categories/{category_id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Single category",
        "description": "Returns a single category",
        "operationId": "getCategoryById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Category",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/payees": {
      "get": {
        "tags": ["Payees"],
        "summary": "List payees",
        "description": "Returns all payees",
        "operationId": "getPayees",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Payees",
            "schema": {
              "$ref": "#/definitions/PayeesResponse"
            }
          },
          "404": {
            "description": "No payees found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/payees/{payee_id}": {
      "get": {
        "tags": ["Payees"],
        "summary": "Single payee",
        "description": "Returns single payee",
        "operationId": "getPayeeById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "payee_id",
            "in": "path",
            "description": "ID of payee",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Payee",
            "schema": {
              "$ref": "#/definitions/PayeeResponse"
            }
          },
          "404": {
            "description": "Payee not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/payee_locations": {
      "get": {
        "tags": ["Payee Locations"],
        "summary": "List payee locations",
        "description": "Returns all payee locations",
        "operationId": "getPayeeLocations",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Payee Locations",
            "schema": {
              "$ref": "#/definitions/PayeeLocationsResponse"
            }
          },
          "404": {
            "description": "No payees locations found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/payee_locations/{payee_location_id}": {
      "get": {
        "tags": ["Payee Locations"],
        "summary": "Single payee location",
        "description": "Returns a single payee location",
        "operationId": "getPayeeLocationById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "payee_location_id",
            "in": "path",
            "description": "ID of payee location",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Payee Location",
            "schema": {
              "$ref": "#/definitions/PayeeLocationResponse"
            }
          },
          "404": {
            "description": "Payee location not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/payees/{payee_id}/payee_locations": {
      "get": {
        "tags": ["Payee Locations"],
        "summary": "List locations for a payee",
        "description": "Returns all payee locations for the specified payee",
        "operationId": "getPayeeLocationsByPayee",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "payee_id",
            "in": "path",
            "description": "ID of payee",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Payee Locations",
            "schema": {
              "$ref": "#/definitions/PayeeLocationsResponse"
            }
          },
          "404": {
            "description": "No payees locations found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/months": {
      "get": {
        "tags": ["Months"],
        "summary": "List budget months",
        "description": "Returns all budget months",
        "operationId": "getBudgetMonths",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Budget months",
            "schema": {
              "$ref": "#/definitions/MonthSummariesResponse"
            }
          },
          "404": {
            "description": "No budget months found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/months/{month}": {
      "get": {
        "tags": ["Months"],
        "summary": "Single budget month",
        "description": "Returns a single budget month",
        "operationId": "getBudgetMonth",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "month",
            "in": "path",
            "description":
              "The budget month.  \"current\" can also be used to specify the current calendar month (UTC).",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Budget month detail",
            "schema": {
              "$ref": "#/definitions/MonthDetailResponse"
            }
          },
          "404": {
            "description": "Budget month not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "List transactions",
        "description": "Returns all budget transactions",
        "operationId": "getTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "since_date",
            "in": "query",
            "description": "Only return transactions on or after this date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "type",
            "in": "query",
            "description":
              "Only return transactions of a certain type (i.e. 'uncategorized', 'unapproved')",
            "required": false,
            "type": "string",
            "enum": ["uncategorized", "unapproved"]
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "$ref": "#/definitions/TransactionSummariesResponse"
            }
          },
          "404": {
            "description": "No transactions found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/accounts/{account_id}/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "List account transactions",
        "description": "Returns all transactions for a specified account",
        "operationId": "getTransactionsByAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "since_date",
            "in": "query",
            "description": "Only return transactions on or after this date",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "$ref": "#/definitions/TransactionSummariesResponse"
            }
          },
          "404": {
            "description": "No transactions found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/categories/{category_id}/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "List category transactions",
        "description": "Returns all transactions for a specified category",
        "operationId": "getTransactionsByCategory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "since_date",
            "in": "query",
            "description": "Only return transactions on or after this date",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "$ref": "#/definitions/TransactionSummariesResponse"
            }
          },
          "404": {
            "description": "No transactions found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/transactions/{transaction_id}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Single transaction",
        "description": "Returns a single transaction",
        "operationId": "getTransactionsById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "transaction_id",
            "in": "path",
            "description": "ID of transaction",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction",
            "schema": {
              "$ref": "#/definitions/TransactionDetailResponse"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/scheduled_transactions": {
      "get": {
        "tags": ["Scheduled Transactions"],
        "summary": "List scheduled transactions",
        "description": "Returns all scheduled transactions",
        "operationId": "getScheduledTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled Transactions",
            "schema": {
              "$ref": "#/definitions/ScheduledTransactionSummariesResponse"
            }
          },
          "404": {
            "description": "No scheduled transactions found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/budgets/{budget_id}/scheduled_transactions/{scheduled_transaction_id}": {
      "get": {
        "tags": ["Scheduled Transactions"],
        "summary": "Single scheduled transaction",
        "description": "Returns a single scheduled transaction",
        "operationId": "getScheduledTransactionById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "ID of budget",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "scheduled_transaction_id",
            "in": "path",
            "description": "ID of scheduled transaction",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled Transaction",
            "schema": {
              "$ref": "#/definitions/ScheduledTransactionDetailResponse"
            }
          },
          "404": {
            "description": "Scheduled transaction not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "required": ["error"],
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "required": ["id", "name", "detail"],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      }
    },
    "BudgetSummaryResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/BudgetSummaryWrapper"
        }
      }
    },
    "BudgetSummaryWrapper": {
      "type": "object",
      "required": ["budgets"],
      "properties": {
        "budgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetSummary"
          }
        }
      }
    },
    "BudgetDetailResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/BudgetDetailWrapper"
        }
      }
    },
    "BudgetDetailWrapper": {
      "type": "object",
      "required": ["budget", "server_knowledge"],
      "properties": {
        "budget": {
          "$ref": "#/definitions/BudgetDetail"
        },
        "server_knowledge": {
          "type": "number",
          "description": "The knowledge of the server"
        }
      }
    },
    "BudgetSummary": {
      "type": "object",
      "required": ["id", "name"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "last_accessed_on": {
          "type": "string",
          "format": "date-time"
        },
        "date_format": {
          "$ref": "#/definitions/DateFormat"
        },
        "currency_format": {
          "$ref": "#/definitions/CurrencyFormat"
        }
      }
    },
    "DateFormat": {
      "type": "object",
      "required": ["locale"],
      "properties": {
        "locale": {
          "type": "string"
        }
      }
    },
    "CurrencyFormat": {
      "type": "object",
      "required": ["locale"],
      "properties": {
        "locale": {
          "type": "string"
        }
      }
    },
    "BudgetDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetSummary"
        },
        {
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            },
            "payees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Payee"
              }
            },
            "payee_locations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PayeeLocation"
              }
            },
            "category_groups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryGroup"
              }
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            },
            "months": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MonthDetail"
              }
            },
            "transactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionSummary"
              }
            },
            "subtransactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubTransaction"
              }
            },
            "scheduled_transactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledTransactionSummary"
              }
            },
            "scheduled_subtransactions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduledSubTransaction"
              }
            }
          }
        }
      ]
    },
    "AccountsResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/AccountsWrapper"
        }
      }
    },
    "AccountsWrapper": {
      "type": "object",
      "required": ["accounts"],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "AccountResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/AccountWrapper"
        }
      }
    },
    "AccountWrapper": {
      "type": "object",
      "required": ["account"],
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    },
    "Account": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type",
        "on_budget",
        "closed",
        "note",
        "balance"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Checking", "Savings", "CreditCard"]
        },
        "on_budget": {
          "type": "boolean",
          "description": "Whether this account is on budget or not"
        },
        "closed": {
          "type": "boolean",
          "description": "Whether this account is closed or not"
        },
        "note": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "1234000",
          "description":
            "The current balance of the account in milliunits format"
        }
      }
    },
    "CategoriesResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/CategoryGroupsWrapper"
        }
      }
    },
    "CategoryGroupsWrapper": {
      "type": "object",
      "required": ["category_groups"],
      "properties": {
        "category_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryGroupWithCategories"
          }
        }
      }
    },
    "CategoryResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/CategoryWrapper"
        }
      }
    },
    "CategoryWrapper": {
      "type": "object",
      "required": ["category"],
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        }
      }
    },
    "CategoryGroup": {
      "type": "object",
      "required": ["id", "name", "hidden"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "hidden": {
          "description": "Whether or not the category group is hidden",
          "type": "boolean"
        }
      }
    },
    "CategoryGroupWithCategories": {
      "allOf": [
        {
          "$ref": "#/definitions/CategoryGroup"
        },
        {
          "required": ["categories"],
          "properties": {
            "categories": {
              "type": "array",
              "description": "Category group categories",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      ]
    },
    "Category": {
      "type": "object",
      "required": [
        "id",
        "category_group_id",
        "name",
        "hidden",
        "note",
        "activity",
        "balance",
        "budgeted"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "category_group_id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "hidden": {
          "description": "Whether or not the category is hidden",
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "budgeted": {
          "type": "number",
          "description": "Budgeted amount in current month in milliunits format"
        },
        "activity": {
          "type": "number",
          "description": "Activity amount in current month in milliunits format"
        },
        "balance": {
          "type": "number",
          "description": "Balance in current month in milliunits format"
        }
      }
    },
    "PayeesResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/PayeesWrapper"
        }
      }
    },
    "PayeesWrapper": {
      "type": "object",
      "required": ["payees"],
      "properties": {
        "payees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payee"
          }
        }
      }
    },
    "PayeeResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/PayeeWrapper"
        }
      }
    },
    "PayeeWrapper": {
      "type": "object",
      "required": ["payee"],
      "properties": {
        "payee": {
          "$ref": "#/definitions/Payee"
        }
      }
    },
    "Payee": {
      "type": "object",
      "required": ["id", "name", "transfer_account_id"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "transfer_account_id": {
          "description":
            "If a transfer payee, the account_id to which this payee transfers to",
          "type": "string"
        }
      }
    },
    "PayeeLocationsResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/PayeeLocationsWrapper"
        }
      }
    },
    "PayeeLocationsWrapper": {
      "type": "object",
      "required": ["payee_locations"],
      "properties": {
        "payee_locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayeeLocation"
          }
        }
      }
    },
    "PayeeLocationResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/PayeeLocationWrapper"
        }
      }
    },
    "PayeeLocationWrapper": {
      "type": "object",
      "required": ["payee_location"],
      "properties": {
        "payee_location": {
          "$ref": "#/definitions/PayeeLocation"
        }
      }
    },
    "PayeeLocation": {
      "type": "object",
      "required": ["id", "payee_id", "latitude", "longitude"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "payee_id": {
          "type": "string",
          "format": "uuid"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "TransactionSummariesResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionSummariesWrapper"
        }
      }
    },
    "TransactionSummariesWrapper": {
      "type": "object",
      "required": ["transactions"],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionSummary"
          }
        }
      }
    },
    "TransactionDetailResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/TransactionDetailWrapper"
        }
      }
    },
    "TransactionDetailWrapper": {
      "type": "object",
      "required": ["transaction"],
      "properties": {
        "transaction": {
          "$ref": "#/definitions/TransactionDetail"
        }
      }
    },
    "TransactionSummary": {
      "type": "object",
      "required": [
        "id",
        "date",
        "amount",
        "memo",
        "cleared",
        "approved",
        "flag",
        "account_id",
        "payee_id",
        "category_id",
        "transfer_account_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "amount": {
          "type": "number",
          "format": "1234000",
          "description":
            "The transaction amount in milliunits format"
        },
        "memo": {
          "type": "string"
        },
        "cleared": {
          "type": "string",
          "enum": ["Cleared", "Uncleared", "Reconciled"],
          "description": "The cleared status of the transaction"
        },
        "approved": {
          "type": "boolean",
          "description": "Whether or not the transaction is approved"
        },
        "flag": {
          "type": "string"
        },
        "account_id": {
          "type": "string",
          "format": "uuid"
        },
        "payee_id": {
          "type": "string",
          "format": "uuid"
        },
        "category_id": {
          "type": "string",
          "format": "uuid"
        },
        "transfer_account_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/TransactionSummary"
        },
        {
          "required": ["subtransactions"],
          "properties": {
            "subtransactions": {
              "type": "array",
              "description": "If a split transaction, the sub-transactions.",
              "items": {
                "$ref": "#/definitions/SubTransaction"
              }
            }
          }
        }
      ]
    },
    "SubTransaction": {
      "type": "object",
      "required": [
        "id",
        "transaction_id",
        "amount",
        "memo",
        "payee_id",
        "category_id",
        "transfer_account_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "transaction_id": {
          "type": "string",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "format": "1234000",
          "description":
            "The sub-transaction amount in milliunits format"
        },
        "memo": {
          "type": "string"
        },
        "payee_id": {
          "type": "string",
          "format": "uuid"
        },
        "category_id": {
          "type": "string",
          "format": "uuid"
        },
        "transfer_account_id": {
          "type": "string",
          "format": "uuid",
          "description":
            "If a transfer, the account_id which the subtransaction transfers to"
        }
      }
    },
    "ScheduledTransactionSummariesResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/ScheduledTransactionSummariesWrapper"
        }
      }
    },
    "ScheduledTransactionSummariesWrapper": {
      "type": "object",
      "required": ["scheduled_transactions"],
      "properties": {
        "scheduled_transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduledTransactionSummary"
          }
        }
      }
    },
    "ScheduledTransactionDetailResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/ScheduledTransactionDetailWrapper"
        }
      }
    },
    "ScheduledTransactionDetailWrapper": {
      "type": "object",
      "required": ["scheduled_transaction"],
      "properties": {
        "scheduled_transaction": {
          "$ref": "#/definitions/ScheduledTransactionDetail"
        }
      }
    },
    "ScheduledTransactionSummary": {
      "type": "object",
      "required": [
        "id",
        "date",
        "frequency",
        "amount",
        "memo",
        "flag",
        "account_id",
        "payee_id",
        "category_id",
        "transfer_account_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "Never",
            "Daily",
            "Weekly",
            "EveryOtherWeek",
            "TwiceAMonth",
            "Every4Weeks",
            "Monthly",
            "EveryOtherMonth",
            "Every3Months",
            "Every4Months",
            "TwiceAYear",
            "Yearly",
            "EveryOtherYear"
          ]
        },
        "amount": {
          "type": "number",
          "format": "1234000",
          "description":
            "The scheduled transaction amount in milliunits format"
        },
        "memo": {
          "type": "string"
        },
        "flag": {
          "type": "string"
        },
        "account_id": {
          "type": "string",
          "format": "uuid"
        },
        "payee_id": {
          "type": "string",
          "format": "uuid"
        },
        "category_id": {
          "type": "string",
          "format": "uuid"
        },
        "transfer_account_id": {
          "type": "string",
          "format": "uuid",
          "description":
            "If a transfer, the account_id which the scheduled transaction transfers to"
        }
      }
    },
    "ScheduledTransactionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/ScheduledTransactionSummary"
        },
        {
          "required": ["subtransactions"],
          "properties": {
            "subtransactions": {
              "type": "array",
              "description":
                "If a split scheduled transaction, the sub-transactions.",
              "items": {
                "$ref": "#/definitions/ScheduledSubTransaction"
              }
            }
          }
        }
      ]
    },
    "ScheduledSubTransaction": {
      "type": "object",
      "required": [
        "id",
        "scheduled_transaction_id",
        "amount",
        "memo",
        "payee_id",
        "category_id",
        "transfer_account_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "scheduled_transaction_id": {
          "type": "string",
          "format": "uuid"
        },
        "amount": {
          "type": "number",
          "format": "1234000",
          "description":
            "The scheduled sub-transaction amount in milliunits format"
        },
        "memo": {
          "type": "string"
        },
        "payee_id": {
          "type": "string",
          "format": "uuid"
        },
        "category_id": {
          "type": "string",
          "format": "uuid"
        },
        "transfer_account_id": {
          "type": "string",
          "format": "uuid",
          "description":
            "If a transfer, the account_id which the scheduled sub transaction transfers to"
        }
      }
    },
    "MonthSummariesResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/MonthSummariesWrapper"
        }
      }
    },
    "MonthSummariesWrapper": {
      "type": "object",
      "required": ["months"],
      "properties": {
        "months": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthSummary"
          }
        }
      }
    },
    "MonthDetailResponse": {
      "type": "object",
      "required": ["data"],
      "properties": {
        "data": {
          "$ref": "#/definitions/MonthDetailWrapper"
        }
      }
    },
    "MonthDetailWrapper": {
      "type": "object",
      "required": ["month"],
      "properties": {
        "month": {
          "$ref": "#/definitions/MonthDetail"
        }
      }
    },
    "MonthSummary": {
      "type": "object",
      "required": ["month", "note", "to_be_budgeted", "age_of_money"],
      "properties": {
        "month": {
          "type": "string",
          "format": "date"
        },
        "note": {
          "type": "string"
        },
        "to_be_budgeted": {
          "type": "number",
          "format": "1234000",
          "description":
            "The current balance of the account in milliunits format"
        },
        "age_of_money": {
          "type": "number"
        }
      }
    },
    "MonthDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/MonthSummary"
        },
        {
          "required": ["categories"],
          "properties": {
            "categories": {
              "type": "array",
              "description": "The budget month categories",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      ]
    }
  }
}
